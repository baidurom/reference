on early-init
    start ueventd

on init
    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc

    mkdir /sdcard
    mkdir /sdcard2
    mkdir /system
    mkdir /custpack
    mkdir /data
    mkdir /cache
    mount /tmp /tmp tmpfs
    insmod /sec.ko
    mknod /dev/sec c 182 0
    chmod 0660 /dev/sec

on fs
# mount mtd partitions
    write /proc/bootprof "INIT:eMMC:Mount_START"
    exec /sbin/e2fsck -p /dev/block/mmcblk0p5

    #ajayet : mount custpack and system for build.prop
    #Mount custpack
    mkdir /custpack
    mount ext4 emmc@custpack /custpack wait ro commit=1,noauto_da_alloc

    # Mount /system rw
    #mount ext4 emmc@android /system wait rw commit=1,noauto_da_alloc
    
    
    #exec /sbin/e2fsck -pfD /dev/block/mmcblk0p3
    #exec /sbin/tune2fs -O has_journal /dev/block/mmcblk0p3	
    mount ext4 emmc@usrdata /data noatime nosuid nodev wait noauto_da_alloc
    #exec /sbin/e2fsck -p /dev/block/mmcblk0p2
    #exec /sbin/tune2fs -O has_journal /dev/block/mmcblk0p2
    mount ext4 emmc@cache /cache noatime nosuid nodev wait noauto_da_alloc
    write /proc/bootprof "INIT:eMMC:Mount_END"


    
    
on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    disabled

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 0BB4
    write /sys/class/android_usb/android0/idProduct 0c01
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/enable 1
    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
